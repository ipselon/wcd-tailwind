[{"filePath":"DEMO/src/usr/form/Button.comp.tsx","declarations":[{"componentName":"Button","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"properties":[{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"autofocus","propertyComment":"\n This Boolean attribute specifies that the button should have input focus when the page loads.\n Only one element in a document can have this attribute.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"children","propertyComment":"\n An array of the nested HTML elements.\n > If there is an element in the children property the text is not rendered.\n","defaultChildren":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"}}]},"children":[]},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"disabled","propertyComment":"\n This Boolean attribute prevents the user from interacting with the button: it cannot be pressed or focused.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"globalAttrs","propertyComment":"\n Global attributes are attributes common to all HTML elements;\n they can be used on all elements, though they may have no effect on some elements.\n","externalProperties":"usr.commons.Global.GlobalTypes"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"name","propertyComment":"\n The name of the button, submitted as a pair with the button’s value as part of the form data.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_OBJECT_TYPE","props":{"propertyName":"tailwindUtilities","propertyComment":"\n Tail Wind Classes `test`\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"text","propertyComment":"\n Text content value.\n > If there is an element in the children property the text is not rendered.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"type","propertyComment":"\n The default behavior of the button. Possible values are:\n * submit: The button submits the form data to the server. This is the default if the attribute is not specified for buttons associated with a <form>, or if the attribute is an empty or invalid value.\n * button: The button has no default behavior, and does nothing when pressed by default. It can have client-side scripts listen to the element's events, which are triggered when the events occur.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"button"},{"value":"submit"}]}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"value","propertyComment":"\n Defines the value associated with the button’s name when it’s submitted with the form data.\n This value is passed to the server in params when the form is submitted.\n","propertyValue":null}}],"defaultProps":{"type":"button","text":"Button"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/text/H1.comp.tsx","declarations":[{"componentName":"H1","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/text/H2.comp.tsx","declarations":[{"componentName":"H2","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/text/H4.comp.tsx","declarations":[{"componentName":"H4","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/commons/Empty.props.ts","declarations":[{"name":"EmptyTypes","properties":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"globalAttrs","propertyComment":"\n Global attributes are attributes common to all HTML elements;\n they can be used on all elements, though they may have no effect on some elements.\n","externalProperties":"usr.commons.Global.GlobalTypes"}},{"type":"COMPONENT_PROPERTY_OBJECT_TYPE","props":{"propertyName":"tailwindUtilities","propertyComment":"\n Tail Wind Classes `test`\n","propertyValue":null}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/commons/Global.props.ts","declarations":[{"name":"GlobalTypes","properties":[{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"tabindex","propertyComment":"\n An integer attribute indicating if the element can take input focus (is focusable),\n if it should participate to sequential keyboard navigation, and if so, at what position.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"title","propertyComment":"\n Contains a text representing advisory information related to the element it belongs to.\n Such information can typically, but not necessarily, be presented to the user as a tooltip.\n","propertyValue":null}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/text/H3.comp.tsx","declarations":[{"componentName":"H3","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/commons/ListItem.props.ts","declarations":[{"name":"ListItemTypes","properties":[{"type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"children","propertyComment":"\n An array of the nested HTML elements\n","defaultChildren":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"}}]},"children":[]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"globalAttrs","propertyComment":"\n Global attributes are attributes common to all HTML elements;\n they can be used on all elements, though they may have no effect on some elements.\n","externalProperties":"usr.commons.Global.GlobalTypes"}},{"type":"COMPONENT_PROPERTY_OBJECT_TYPE","props":{"propertyName":"tailwindUtilities","propertyComment":"\n Tail Wind Classes `test`\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"value","propertyComment":"\n An integer attribute indicates the current ordinal value of the list item.\n The value attribute has no meaning for unordered lists.\n","propertyValue":null}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/commons/SectionOrText.props.ts","declarations":[{"name":"SectionOrTextTypes","properties":[{"type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"children","propertyComment":"\n An array of the nested HTML elements.\n > If there is an element in the children property the text is not rendered.\n","defaultChildren":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"}}]},"children":[]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"globalAttrs","propertyComment":"\n Global attributes are attributes common to all HTML elements;\n they can be used on all elements, though they may have no effect on some elements.\n","externalProperties":"usr.commons.Global.GlobalTypes"}},{"type":"COMPONENT_PROPERTY_OBJECT_TYPE","props":{"propertyName":"tailwindUtilities","propertyComment":"\n Tail Wind Classes\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"text","propertyComment":"\n Text content value.\n > If there is an element in the children property the text is not rendered.\n","propertyValue":null}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/commons/Text.props.ts","declarations":[{"name":"TextTypes","properties":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"globalAttrs","propertyComment":"\n Global attributes are attributes common to all HTML elements;\n they can be used on all elements, though they may have no effect on some elements.\n","externalProperties":"usr.commons.Global.GlobalTypes"}},{"type":"COMPONENT_PROPERTY_OBJECT_TYPE","props":{"propertyName":"tailwindUtilities","propertyComment":"\n Tail Wind Classes `test`\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"text","propertyComment":"\n Text content value\n","propertyValue":null}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/commons/Section.props.ts","declarations":[{"name":"SectionTypes","properties":[{"type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"children","propertyComment":"\n An array of the nested HTML elements\n","defaultChildren":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"}}]},"children":[]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"globalAttrs","propertyComment":"\n Global attributes are attributes common to all HTML elements;\n they can be used on all elements, though they may have no effect on some elements.\n","externalProperties":"usr.commons.Global.GlobalTypes"}},{"type":"COMPONENT_PROPERTY_OBJECT_TYPE","props":{"propertyName":"tailwindUtilities","propertyComment":"\n Tail Wind Classes `test`\n","propertyValue":null}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/link/A.comp.tsx","declarations":[{"componentName":"A","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"properties":[{"type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"children","propertyComment":"\n An array of the nested HTML elements\n","defaultChildren":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"}}]},"children":[]},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"download","propertyComment":"\n Prompts the user to save the linked URL instead of navigating to it.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"globalAttrs","propertyComment":"\n Global attributes are attributes common to all HTML elements;\n they can be used on all elements, though they may have no effect on some elements.\n","externalProperties":"usr.commons.Global.GlobalTypes"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"href","propertyComment":"\n The URL that the hyperlink points to.\n Links are not restricted to HTTP-based URLs — they can use any URL scheme supported by browsers\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"hreflang","propertyComment":"\n Hints at the human language of the linked URL.\n No built-in functionality. Allowed values are the same as the global lang attribute.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"ping","propertyComment":"\n A space-separated list of URLs. When the link is followed, the browser will send POST requests with the body PING to the URLs.\n Typically for tracking.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"rel","propertyComment":"\n The relationship of the linked URL as space-separated link types.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_OBJECT_TYPE","props":{"propertyName":"tailwindUtilities","propertyComment":"\n Tail Wind Classes `test`\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"target","propertyComment":"\n Where to display the linked URL, as the name for a browsing context (a tab, window, or <iframe>). The following keywords have special meanings for where to load the URL:\n * _self: the current browsing context. (Default)\n * _blank: usually a new tab, but users can configure browsers to open a new window instead.\n * _parent: the parent browsing context of the current one. If no parent, behaves as _self.\n * _top: the topmost browsing context (the \"highest\" context that’s an ancestor of the current one). If no ancestors, behaves as _self.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"_self"},{"value":"_blank"},{"value":"_parent"},{"value":"_top"}]}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"text","propertyComment":"\n Text content value.\n > If there is an element in the children property the text is not rendered.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"type","propertyComment":"\n Hints at the linked URL’s format with a MIME type. No built-in functionality.\n","propertyValue":null}}],"defaultProps":{"href":"#","text":"Link label"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/text/H6.comp.tsx","declarations":[{"componentName":"H6","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/media/Img.comp.tsx","declarations":[{"componentName":"Img","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"properties":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"alt","propertyComment":"\n Defines an alternative text description of the image.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"globalAttrs","propertyComment":"\n Global attributes are attributes common to all HTML elements;\n they can be used on all elements, though they may have no effect on some elements.\n","externalProperties":"usr.commons.Global.GlobalTypes"}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"height","propertyComment":"\n The intrinsic height of the image, in pixels. Must be an integer without a unit.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"src","propertyComment":"\n The image URL. Mandatory for the <img> element.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_OBJECT_TYPE","props":{"propertyName":"tailwindUtilities","propertyComment":"\n Tail Wind Classes `test`\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"width","propertyComment":"\n The intrinsic width of the image in pixels. Must be an integer without a unit.\n","propertyValue":null}}],"defaultProps":{"alt":"No Image"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/misc/Address.comp.tsx","declarations":[{"componentName":"Address","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.Section.SectionTypes","defaultProps":{"children":[{}]}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/misc/Figcaption.comp.tsx","declarations":[{"componentName":"Figcaption","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.Text.TextTypes","defaultProps":{"text":"New Text"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/misc/Figure.comp.tsx","declarations":[{"componentName":"Figure","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.Section.SectionTypes","defaultProps":{"children":[{}]}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/misc/Hr.comp.tsx","declarations":[{"componentName":"Hr","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.Empty.EmptyTypes","defaultProps":{}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/list/Dd.comp.tsx","declarations":[{"componentName":"Dd","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.Text.TextTypes","defaultProps":{"text":"Description Text"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/list/Dt.comp.tsx","declarations":[{"componentName":"Dt","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.Text.TextTypes","defaultProps":{"text":"Description Term"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/list/Li.comp.tsx","declarations":[{"componentName":"Li","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.Section.SectionTypes","defaultProps":{"children":[{}]}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/list/Dl.comp.tsx","declarations":[{"componentName":"Dl","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.Section.SectionTypes","defaultProps":{"children":[{}]}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/text/H5.comp.tsx","declarations":[{"componentName":"H5","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/list/Ul.comp.tsx","declarations":[{"componentName":"Ul","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.Section.SectionTypes","defaultProps":{"children":[{}]}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/list/Ol.comp.tsx","declarations":[{"componentName":"Ol","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"properties":[{"type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"children","propertyComment":"\n An array of the nested HTML elements\n","defaultChildren":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"}}]},"children":[]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"globalAttrs","propertyComment":"\n Global attributes are attributes common to all HTML elements;\n they can be used on all elements, though they may have no effect on some elements.\n","externalProperties":"usr.commons.Global.GlobalTypes"}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"reversed","propertyComment":"\n A Boolean attribute specifies that the list’s items are in reverse order.\n Items will be numbered from high to low.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"start","propertyComment":"\n An integer to start counting from for the list items.\n Always an Arabic numeral (1, 2, 3, etc.), even when the numbering type is letters or Roman numerals.\n For example, to start numbering elements from the letter \"d\" or the Roman numeral \"iv,\" use start=\"4\".\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_OBJECT_TYPE","props":{"propertyName":"tailwindUtilities","propertyComment":"\n Tail Wind Classes `test`\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"type","propertyComment":"\n Sets the numbering type:\n * `a` for lowercase letters\n * `A` for uppercase letters\n * `i` for lowercase Roman numerals\n * `I` for uppercase Roman numerals\n * `1` for numbers (default)\n","propertyValue":null,"propertyValueVariants":[{"value":"a"},{"value":"A"},{"value":"i"},{"value":"I"},{"value":"1"}]}}],"defaultProps":{"type":"1","children":[{}]}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/section/Article.comp.tsx","declarations":[{"componentName":"Article","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.Section.SectionTypes","defaultProps":{"children":[{}]}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/section/Blockquote.comp.tsx","declarations":[{"componentName":"Blockquote","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.Section.SectionTypes","defaultProps":{"children":[{}]}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/section/Div.comp.tsx","declarations":[{"componentName":"Div","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.Section.SectionTypes","defaultProps":{"children":[{}]}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/section/Footer.comp.tsx","declarations":[{"componentName":"Footer","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.Section.SectionTypes","defaultProps":{"children":[{}]}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/section/HGroup.comp.tsx","declarations":[{"componentName":"HGroup","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.Section.SectionTypes","defaultProps":{"children":[{}]}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/section/Header.comp.tsx","declarations":[],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/section/Nav.comp.tsx","declarations":[{"componentName":"Nav","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.Section.SectionTypes","defaultProps":{"children":[{}]}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/section/Main.comp.tsx","declarations":[{"componentName":"Main","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.Section.SectionTypes","defaultProps":{"children":[{}]}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/section/Section.comp.tsx","declarations":[{"componentName":"Section","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.Section.SectionTypes","defaultProps":{"children":[{}]}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/text/P.comp.tsx","declarations":[{"componentName":"P","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/text/Span.comp.tsx","declarations":[{"componentName":"Span","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/text-decoration/Abbr.comp.tsx","declarations":[{"componentName":"Abbr","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/text-decoration/B.comp.tsx","declarations":[{"componentName":"B","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/text-decoration/Bdo.comp.tsx","declarations":[{"componentName":"Bdo","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/text-decoration/Bdi.comp.tsx","declarations":[{"componentName":"Bdi","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/text-decoration/Code.comp.tsx","declarations":[{"componentName":"Code","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/text-decoration/Cite.comp.tsx","declarations":[{"componentName":"Cite","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/text-decoration/Dfn.comp.tsx","declarations":[{"componentName":"Dfn","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/text-decoration/Em.comp.tsx","declarations":[{"componentName":"Em","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/text-decoration/I.comp.tsx","declarations":[{"componentName":"I","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/text-decoration/Kbd.comp.tsx","declarations":[{"componentName":"Kbd","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/text-decoration/Mark.comp.tsx","declarations":[{"componentName":"Mark","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/text-decoration/Pre.comp.tsx","declarations":[{"componentName":"Pre","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/text-decoration/S.comp.tsx","declarations":[{"componentName":"S","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/text-decoration/Q.comp.tsx","declarations":[{"componentName":"Q","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/text-decoration/Small.comp.tsx","declarations":[{"componentName":"Small","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/text-decoration/Strong.comp.tsx","declarations":[{"componentName":"Strong","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/text-decoration/Sup.comp.tsx","declarations":[{"componentName":"Sup","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/text-decoration/Sub.comp.tsx","declarations":[{"componentName":"Sub","wcdAnnotations":{"annotationComment":"\n This is a sample component, it shows how to create function wrappers.\n"},"externalProperties":"usr.commons.SectionOrText.SectionOrTextTypes","defaultProps":{"text":"Text here"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"}]
